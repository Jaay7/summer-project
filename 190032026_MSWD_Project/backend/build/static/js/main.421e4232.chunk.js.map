{"version":3,"sources":["components/Header.tsx","components/Home.tsx","components/Login.tsx","components/Signup.tsx","components/Profile.tsx","images/searchImg.svg","images/noData.svg","components/Search.tsx","images/emtInbox.svg","components/Inbox.tsx","components/MessageBox.tsx","components/OthersProfile.tsx","components/Settings.tsx","components/GroupMsgBox.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","boxShadow","flexGrow","appbar","backgroundColor","palette","background","default","borderBottom","type","zIndex","link","color","text","secondary","textDecoration","primary","Header","classes","className","AppBar","position","Toolbar","Typography","variant","to","style","cards","padding","borderRadius","box","display","alignItems","backdropFilter","justifyContent","minHeight","sfubox","gotbox","mpbox","USER_DATA","gql","Home","useQuery","context","headers","localStorage","getItem","pollInterval","loading","error","data","height","CircularProgress","message","Grid","container","spacing","item","xs","flexDirection","Card","fontSize","paddingLeft","ColorButton","withStyles","getContrastText","Button","CssTextField","borderBottomColor","borderColor","TextField","main","width","paper","margin","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","form","marginTop","alignSelf","submit","SlideTransition","props","Slide","direction","USER_LOGIN","Login","history","useHistory","React","useState","username","setUsername","password","setPassword","open","Transition","state","setState","useMutation","LoginUser","onSubmit","a","variables","response","console","log","token","login","user","setItem","push","undefined","component","CssBaseline","sm","md","Paper","elevation","square","required","fullWidth","id","label","name","size","onChange","event","target","value","onClick","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","TransitionComponent","USER_REGISTER","Signup","setName","email","setEmail","RegisterUser","register","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","details","summary","opacity","buttons","Profile","profile","inputRoot","inputInput","transition","transitions","create","breakpoints","up","itemss","minWidth","marginRight","marginBottom","transform","content","flexWrap","SEARCH_USERS","Search","search","setSearch","letter","InputBase","placeholder","autoFocus","input","startAdornment","InputAdornment","inputProps","alignContent","src","searchImg","alt","searchUser","length","noData","map","index","Avatar","charAt","toUpperCase","textTransform","badge","right","top","border","Badge","TabPanel","children","other","role","hidden","aria-labelledby","Box","a11yProps","StyledTabs","indicator","maxWidth","Tabs","centered","TabIndicatorProps","StyledTab","fontWeight","fontWeightRegular","fontWeightMedium","Tab","disableRipple","forwardRef","ref","tabs","borderRight","divider","listlink","divd","searchList","cursor","ALL_CHATS","ALL_GROUPS","Inbox","setValue","dialogOpen","setDialogOpen","groupName","setGroupName","currentUser","handleDialogClose","useRouteMatch","path","url","newValue","aria-label","Divider","orientation","flexItem","Dialog","keepMounted","aria-describedby","DialogTitle","DialogContent","Input","handleDialogCancel","CREATE_GROUP","SearchUsers","createGroup","handleOk","createdBy","persons","Chip","onDelete","e","chips","filter","chip","marginLeft","overflowY","List","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","includes","IconButton","bottom","Chats","retrieveChats","emtInbox","Link","otherUser","overflow","Groups","retrieveGroups","textAlign","chats","fontStyle","slice","sender","paddingRight","chatbox","borderLeft","tabbar","leftSide","rightSide","RET_MSGS","SEND_MSG","AlwaysScollToBottom","elementRef","useRef","useEffect","current","scrollIntoView","MessageBox","emojiPicker","matches","useMediaQuery","useParams","setMessage","emojiPickerState","SetEmojiPicker","sendMessage","onSend","title","emoji","onSelect","native","retrieveMessages","flex","paddingBottom","endAdornment","preventDefault","OTHER_USER","OthersProfile","p","borderTop","editDetails","fields","EDIT_NAME","EDIT_EMAIL","Settings","onToggleDark","editName","editEmail","onClickName","newName","onClickEmail","newEmail","WbSunnyRounded","NightsStayRounded","removeItem","drawer","drawerItems","leave","RET_GRP_MSGS","SEND_GRP_MSG","EDIT_GNAME","GroupMsgBox","drawerOpen","setDrawerOpen","editGroupName","onEdit","useTheme","darkMode","retrieveGroupMessages","Drawer","anchor","DialogContentText","ADD_PERSONS","addPersons","client","ApolloClient","uri","cache","InMemoryCache","App","darkTheme","setDarkTheme","muiTheme","createMuiTheme","ApolloProvider","ThemeProvider","Fragment","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.421e4232.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      boxShadow: \"none\",\r\n      flexGrow: 1,\r\n    },\r\n    appbar: {\r\n      backgroundColor: theme.palette.background.default,\r\n      boxShadow: \"none\",\r\n      borderBottom: theme.palette.type === 'dark' ? '1px solid #616161' : '1px solid #e2e2e2',\r\n      zIndex: 1\r\n    },\r\n    link: {\r\n      color: theme.palette.text.secondary,\r\n      textDecoration: \"none\",\r\n      '&:hover': {\r\n        color: theme.palette.text.primary,\r\n      } \r\n    }\r\n  })\r\n)\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h5\"><Link to=\"/\" className={classes.link}>Messaging Application</Link></Typography>\r\n          <span style={{flexGrow: 0.8}}></span>\r\n          <Typography>\r\n            <Link to=\"/search\" className={classes.link}>Search</Link>\r\n          </Typography>\r\n          <span style={{flexGrow: 0.05}}></span>\r\n          <Typography>\r\n            <Link to=\"/inbox\" className={classes.link}>Inbox</Link>\r\n          </Typography>\r\n          <span style={{flexGrow: 0.05}}></span>\r\n          <Typography>\r\n            <Link to=\"/profile\" className={classes.link}>Profile</Link>\r\n          </Typography>\r\n          <span style={{flexGrow: 0.05}}></span>\r\n          <Link to=\"/settings\" className={classes.link}><SettingsIcon /></Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport { Grid, Card, Typography, CircularProgress } from '@material-ui/core'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    cards: {\r\n      padding: 25,\r\n      borderRadius: 15,\r\n    },\r\n    box: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      backdropFilter: 'blur(10px)',\r\n      justifyContent: 'space-between',\r\n    },\r\n    root: {\r\n      minHeight: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff' \r\n    },\r\n    sfubox: {\r\n      backgroundColor: theme.palette.type === 'dark' ? '#2E7D32' : '#A5D6A7'\r\n    },\r\n    gotbox: {\r\n      backgroundColor: theme.palette.type === 'dark' ? '#EF6C00' : '#FFCC80'\r\n    },\r\n    mpbox: {\r\n      backgroundColor: theme.palette.type === 'dark' ? '#C62828' : '#EF9A9A'\r\n    }\r\n  })\r\n)\r\n\r\nconst USER_DATA = gql`\r\n  query UserProfile {\r\n    profile{\r\n      id\r\n      name\r\n      email\r\n      username\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nconst Home: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const { loading, error, data } = useQuery(USER_DATA, {\r\n    context: {\r\n      headers: {\r\n        \"Authorization\": localStorage.getItem(\"token\")\r\n      }\r\n    },\r\n    pollInterval: 500\r\n  })\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      {loading ? (\r\n        <div style={{display: 'flex', justifyContent: 'center', height: '89vh'}}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : error ? (\r\n        <><p>{error.message}</p><Redirect to=\"/login\" /></>\r\n      ) : (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={6} style={{height: '89vh', alignItems: 'center', justifyContent: 'space-evenly', display: 'flex', flexDirection: 'column'}}>\r\n          <Typography variant=\"h3\" color=\"textPrimary\">A new way to unite with people.</Typography>\r\n          <Grid container spacing={4} >\r\n          <Grid item xs={6}>\r\n            <Link to=\"/search\" style={{textDecoration: 'none'}}>\r\n              <Card variant=\"outlined\" className={`${classes.cards} ${classes.sfubox}`}>\r\n                <div className={classes.box}>\r\n                  <div style={{display: 'flex'}}>\r\n                    <SearchIcon style={{fontSize: 35}} />\r\n                    <Typography variant=\"h5\" style={{paddingLeft: 10}}>Search for Users</Typography>\r\n                  </div>\r\n                  <ChevronRightRoundedIcon style={{fontSize: 40}} />\r\n                </div>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link to=\"/inbox\" style={{textDecoration: 'none'}}>\r\n              <Card variant=\"outlined\" className={`${classes.cards} ${classes.gotbox}`}>\r\n                <div className={classes.box}>\r\n                  <Typography variant=\"h5\">Go to Inbox</Typography>\r\n                  <ChevronRightRoundedIcon style={{fontSize: 40}} />\r\n                </div>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link to=\"/profile\" style={{textDecoration: 'none'}}>\r\n              <Card variant=\"outlined\" className={`${classes.cards} ${classes.mpbox}`} >\r\n                <div className={classes.box}>\r\n                  <Typography variant=\"h5\">My Profile</Typography>\r\n                  <ChevronRightRoundedIcon style={{fontSize: 40}} />\r\n                </div>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n      </Grid>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { Button, TextField, Typography, Grid, Paper, Snackbar, CssBaseline, Slide } from '@material-ui/core';\r\nimport { makeStyles, withStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom'\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst ColorButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText('#0e9170'),\r\n    background: 'linear-gradient(152deg, #2193b0 0%, #6dd5ed 100%)',\r\n    '&:hover': {\r\n      backgroundColor: '#1a866b96',\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: '#1890ff',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#1890ff',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#1890ff',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    main: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff'\r\n    },\r\n    root: {\r\n      // flexGrow: 1,\r\n      height: '70vh',\r\n      width: '80%',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: \"0px 30px\",\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      minHeight: \"100%\"\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(\"https://images.unsplash.com/photo-1530811761207-8d9d22f0a141?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1050&q=80\")',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', \r\n      marginTop: theme.spacing(1),\r\n      alignSelf: 'center'\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  })\r\n)\r\n\r\n// interface user {\r\n//   id: number;\r\n//   name: string;\r\n//   usernanme: string;\r\n//   email: string;\r\n// }\r\n\r\n// interface login {\r\n//   user: user;\r\n//   token: string;\r\n//   refreshToken: string;\r\n// }\r\n\r\n// interface loginVars {\r\n//   username: string;\r\n//   password: string;\r\n// }\r\n\r\nfunction SlideTransition(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst USER_LOGIN = gql`\r\nmutation LoginUser($username: String!, $password: String!) {\r\n  login(username: $username, password: $password) {\r\n    user {\r\n      id\r\n      name\r\n      username\r\n      email\r\n    }\r\n    token\r\n    refreshToken\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst Login: React.FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const [ username, setUsername ] = React.useState('');\r\n  const [password, setPassword ] = React.useState('');\r\n\r\n  const [state, setState] = React.useState<{\r\n    open: boolean;\r\n    message: string;\r\n    Transition: React.ComponentType<TransitionProps & { children?: React.ReactElement<any, any> }>;\r\n  }>({\r\n    open: false,\r\n    message: '',\r\n    Transition: Slide,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\n  const onChangeuser = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUsername(event.target.value);\r\n  }\r\n  const onChangepass = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  const [LoginUser, { error, data }] = useMutation( USER_LOGIN )\r\n  // if (localStorage.getItem('token') !== undefined) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n  const onSubmit = async() => {\r\n    const response = await LoginUser({\r\n      variables: { username: username, password: password }\r\n    })\r\n    if(error) {\r\n      // console.log(error)\r\n      setState({open: true, Transition: SlideTransition, message: error.message})\r\n    } else{\r\n      console.log(data?.token);\r\n      let token = response.data.login.token\r\n      let username = response.data.login.user.username\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', username);\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      { localStorage.getItem('token') !== undefined && localStorage.getItem('token') !== null ? (\r\n        <>\r\n        <Typography>You are already loggedin</Typography>\r\n        <Redirect to=\"/\" />\r\n        </>\r\n      ) : (\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={8} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <div>\r\n              <Typography component=\"h1\" variant=\"h5\">Login Here,</Typography>\r\n              <div className={classes.form}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  onChange={onChangeuser}\r\n                />\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  size=\"small\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={onChangepass}\r\n                />\r\n                <Link to=\"/\" style={{color: '#0083B0', textDecoration: 'none'}}>\r\n                    Forgot password?\r\n                </Link>\r\n                <ColorButton \r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={onSubmit}\r\n                >\r\n                  <Typography style={{ textDecoration: 'none', color: '#fff'}}>Login</Typography>\r\n                </ColorButton >\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    \r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"/signup\" style={{color: '#0083B0'}}>\r\n                      Don't have an account? Sign Up\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>)}\r\n      <Snackbar\r\n        open={state.open}\r\n        anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\r\n        onClose={handleClose}\r\n        autoHideDuration={2500}\r\n        TransitionComponent={state.Transition}\r\n        message={state.message}\r\n        key={state.Transition.name}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport { Button, TextField, Typography, Grid, Paper, CssBaseline, Slide, Snackbar } from '@material-ui/core';\r\nimport { makeStyles, withStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom'\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst ColorButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText('#0e9170'),\r\n    background: 'linear-gradient(152deg, #2193b0 0%, #6dd5ed 100%)',\r\n    '&:hover': {\r\n      backgroundColor: '#1a866b96',\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: '#1890ff',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#1890ff',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#1890ff',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    main: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff'\r\n    },\r\n    root: {\r\n      // flexGrow: 1,\r\n      height: '70vh',\r\n      width: '80%',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: \"0px 30px\",\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      minHeight: \"100%\"\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://images.unsplash.com/photo-1506377711776-dbdc2f3c20d9?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', \r\n      marginTop: theme.spacing(1),\r\n      alignSelf: 'center'\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  })\r\n)\r\n\r\n// interface user {\r\n//   id: number;\r\n//   name: string;\r\n//   usernanme: string;\r\n//   email: string;\r\n// }\r\n\r\n// interface register {\r\n//   user: user;\r\n//   token: string;\r\n//   refreshToken: string;\r\n// }\r\n\r\n// interface registerVars {\r\n//   name: string;\r\n//   email: string;\r\n//   password: string;\r\n//   username: string;\r\n// }\r\n\r\nfunction SlideTransition(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst USER_REGISTER = gql`\r\n  mutation RegisterUser($name: String!, $email: String!, $password: String!, $username: String!) {\r\n    register(\r\n      name: $name,\r\n      email: $email,\r\n      password: $password,\r\n      username: $username,\r\n    ) {\r\n      user {\r\n        id\r\n        name\r\n        email\r\n        username\r\n      }\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nconst Signup: React.FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [ username, setUsername ] = React.useState('');\r\n  const [name, setName ] = React.useState('');\r\n  const [email, setEmail ] = React.useState('');\r\n  const [password, setPassword ] = React.useState('');\r\n\r\n  const [state, setState] = React.useState<{\r\n    open: boolean;\r\n    message: string;\r\n    Transition: React.ComponentType<TransitionProps & { children?: React.ReactElement<any, any> }>;\r\n  }>({\r\n    open: false,\r\n    message: '',\r\n    Transition: Slide,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  const onChangeuser = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUsername(event.target.value);\r\n  }\r\n  const onChangepass = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  }\r\n  const onChangename = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  }\r\n  const onChangeemail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  const [RegisterUser, {error, data}] = useMutation(USER_REGISTER)\r\n  const onSubmit = async () => {\r\n    const response = await RegisterUser({\r\n      variables: { name: name, email: email, password: password, username: username} \r\n    })\r\n  \r\n    if(error) {\r\n      console.log(error)\r\n      setState({open: true, Transition: SlideTransition, message: error.message})\r\n    } else {\r\n      console.log(data?.token)\r\n      let token = response.data.register.token\r\n      let username = response.data.register.user.username\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', username);\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.main}>\r\n      { localStorage.getItem('token') !== undefined && localStorage.getItem('token') !== null ? (\r\n        <>\r\n        <Typography>You are already loggedin</Typography>\r\n        <Redirect to=\"/\" />\r\n        </>\r\n      ) : (\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={8} className={classes.image}>\r\n          {/* <Typography>This is Signup page</Typography> */}\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <div>\r\n              <Typography component=\"h1\" variant=\"h5\">Signup Here,</Typography>\r\n              <div className={classes.form}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  onChange={onChangename}\r\n                />\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  size=\"small\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  onChange={onChangeuser}\r\n                />\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  size=\"small\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  onChange={onChangeemail}\r\n                />\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={onChangepass}\r\n                />\r\n                <ColorButton \r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={onSubmit}\r\n                >\r\n                  <Typography style={{ textDecoration: 'none', color: '#fff'}}>Signup</Typography>\r\n                </ColorButton >\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    \r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"/login\" style={{color: '#0083B0'}}>\r\n                      Already have an account? Login\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      )}\r\n      <Snackbar\r\n        open={state.open}\r\n        anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\r\n        onClose={handleClose}\r\n        autoHideDuration={2500}\r\n        TransitionComponent={state.Transition}\r\n        message={state.message}\r\n        key={state.Transition.name}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react'\r\nimport { Link, Redirect, useHistory } from 'react-router-dom'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { useQuery, gql, useMutation } from '@apollo/client';\r\nimport Header from './Header';\r\nimport {CircularProgress, Grid, Button, AccordionActions, Accordion, AccordionDetails, AccordionSummary, Typography, Avatar} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      minHeight: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff' \r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(16),\r\n      flexBasis: '33.33%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    details: {\r\n      backgroundColor: theme.palette.type === 'dark' ? '#464646' : '#FCF3F4',\r\n    },\r\n    summary: {\r\n      backgroundColor: theme.palette.type === 'dark' ? '#000' : '#FAFAFA',\r\n      opacity: 0.8\r\n    },\r\n    buttons: {\r\n      backgroundColor: '#D32F2F',\r\n      color: '#fff',\r\n      '&:hover': {\r\n        backgroundColor: '#EF5350'\r\n      }\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nconst USER_DATA = gql`\r\n  query UserProfile {\r\n    profile{\r\n      id\r\n      name\r\n      email\r\n      username\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nconst Profile: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState<string | false>(false);\r\n\r\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const { loading, error, data } = useQuery(USER_DATA, {\r\n    context: {\r\n      headers: {\r\n        \"Authorization\": localStorage.getItem(\"token\")\r\n      }\r\n    },\r\n    pollInterval: 500\r\n  })\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      {loading ? (\r\n        <div style={{display: 'flex', justifyContent: 'center', height: '89vh'}}>\r\n          <CircularProgress />\r\n        </div>\r\n        ) : error ? (\r\n          <><p>{error.message}</p><Redirect to=\"/login\" /></>\r\n        ) : (\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={3}>\r\n              {/* <div>\r\n              <Avatar src={`${data.profile.profilePic}`} alt={data.profile.username} style={{height: 150, width: 150, borderRadius: \"50%\", objectFit: \"cover\"}} />\r\n              </div> */}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <div>\r\n                <Typography>Name: {data.profile.name}</Typography>\r\n                <Typography>Username: {data.profile.username}</Typography>\r\n                <Typography>Email: {data.profile.email}</Typography>\r\n              </div>\r\n            </Grid>\r\n          <Grid item xs={3}></Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/searchImg.b7bec5a0.svg\";","export default __webpack_public_path__ + \"static/media/noData.cf33a984.svg\";","import React, { useState } from 'react'\r\nimport Header from './Header'\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { InputBase, InputAdornment, ListItem, Avatar, Paper, Grid, Button, Typography, CircularProgress, Card } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport searchImg from '../images/searchImg.svg'\r\nimport noData from '../images/noData.svg'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    inputRoot: {\r\n      color: theme.palette.type === 'dark' ? '#f1f1f1': 'inherit',\r\n      borderRadius: 10,\r\n      paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n      backgroundColor: theme.palette.type === 'dark' ? '#424242' : '#eeeeee'\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      height: 40,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '50ch',\r\n        '&:focus': {\r\n          width: '60ch',\r\n        },\r\n      },\r\n    },\r\n    itemss: {\r\n      padding: 25,\r\n      minWidth: '30%',\r\n      height: '25vh',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      marginRight: 20,\r\n      marginBottom: 20,\r\n      backgroundColor: theme.palette.type === 'dark' ? '#272727' : '#f1f1f1',\r\n      borderRadius: 10,\r\n      '&:hover': {\r\n        boxShadow: theme.palette.type === 'dark' ? '0px 0px 10px #494949' : '0px 0px 10px #c4c4c4',\r\n        transform: 'translate(0px, -15px)'\r\n      },\r\n      transition: 'transform 0.5s',\r\n    },\r\n    root: {\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff',\r\n      minHeight: '100vh'\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      width: '100%',\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center',\r\n    }\r\n  })\r\n)\r\n\r\nconst SEARCH_USERS = gql`\r\n  query SearchUser($letter: String!) {\r\n    searchUser(letter: $letter) {\r\n      name\r\n      username\r\n      email\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst Search: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [ search, setSearch ] = useState('')\r\n  const { loading, error, data} = useQuery(SEARCH_USERS, {\r\n    variables: { letter: search }\r\n  })\r\n\r\n  const changeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearch(event.target.value);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <div style={{width: \"100%\", alignItems: 'center', display: 'flex', flexDirection: 'column', marginTop: 50}}>\r\n        <InputBase\r\n          placeholder=\"Search for the Users…\"\r\n          autoFocus\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          }\r\n          onChange={changeSearch}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n        />\r\n      </div>\r\n      \r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      {loading ? (\r\n        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <CircularProgress />\r\n        </div>\r\n      ): error ? (\r\n        <>{error.message}</>\r\n      ): search === '' ? (\r\n        <div style={{display: 'flex', height: '68vh', justifyContent: 'center', alignContent: 'center'}}>\r\n          <img src={searchImg} alt=\"\" style={{height: 200, width: 350}} />\r\n        </div>\r\n      ) : data.searchUser.length === 0 ? (\r\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n          <img src={noData} alt=\"\" style={{height: 200, width: 350}} />\r\n          <br></br>\r\n          <br></br>\r\n          <Typography variant=\"h5\" style={{color:\"#464646\"}}>No results found</Typography>\r\n        </div>\r\n      ) : (\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={8} className={classes.content}>\r\n            {data.searchUser.map((index: any) => (\r\n              <div key={index.username}>\r\n                <Card variant=\"outlined\" className={classes.itemss}>\r\n                  <Avatar style={{height: 60, width: 60}}>{index.username.charAt(0).toUpperCase()}</Avatar>\r\n                  <span style={{flexGrow: 1}}></span>\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">{index.username}</Typography>\r\n                    <Typography color=\"textSecondary\">{index.name}</Typography>\r\n                  <span style={{flexGrow: 1}}></span>\r\n                  <Link style={{textDecoration: 'none'}} to={`/profile/${index.username}`}>\r\n                    <Button variant=\"outlined\" style={{backgroundColor: '#0277BD', color: '#fff', height: 30, width: 130, textTransform: 'capitalize'}}>\r\n                      View Profile\r\n                    </Button>\r\n                  </Link>\r\n                  {/* </div> */}\r\n                </Card>\r\n              </div>\r\n            ))}\r\n            </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","export default __webpack_public_path__ + \"static/media/emtInbox.342a16fa.svg\";","import React from 'react'\r\nimport Header from './Header'\r\nimport { Grid, Divider, Typography, \r\n  Button, ListItem, Badge, Avatar, \r\n  Tabs, Tab, Box, IconButton, Dialog, \r\n  DialogActions, DialogContent, Chip,\r\n  DialogContentText, DialogTitle, Slide, \r\n  Input, List, ListItemSecondaryAction,\r\n  ListItemAvatar, ListItemText\r\n} from '@material-ui/core'\r\nimport { useQuery, gql, useMutation } from '@apollo/client';\r\nimport { makeStyles, createStyles, Theme, withStyles } from '@material-ui/core/styles';\r\nimport {Link, Route, Switch, Redirect, useRouteMatch} from 'react-router-dom'\r\n// import MessageBox from './MessageBox';\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport emtInbox from '../images/emtInbox.svg'\r\nimport noData from '../images/noData.svg'\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\n\r\n// badge styles\r\nconst StyledBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      right: -20,\r\n      top: 16,\r\n      height: 25,\r\n      width: 25,\r\n      borderRadius: \"50%\",\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n      backgroundColor: theme.palette.type === 'light' ? '#FF8A80' : '#D32F2F',\r\n      color: theme.palette.text.secondary\r\n    },\r\n  }),\r\n)(Badge);\r\n\r\n// tab panel\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\ninterface StyledTabsProps {\r\n  value: number;\r\n  onChange: (event: React.ChangeEvent<{}>, newValue: number) => void;\r\n}\r\n\r\n// tab styles\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    '& > span': {\r\n      maxWidth: 70,\r\n      width: '100%',\r\n      backgroundColor: '#AED581',\r\n    },\r\n  },\r\n})((props: StyledTabsProps) => <Tabs {...props} centered TabIndicatorProps={{ children: <span /> }} />);\r\n\r\ninterface StyledTabProps {\r\n  label: string;\r\n}\r\n\r\nconst StyledTab = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      textTransform: 'none',\r\n      color: theme.palette.text.primary,\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      fontSize: theme.typography.pxToRem(16),\r\n      marginRight: theme.spacing(1),\r\n      '&:focus': {\r\n        opacity: 1,\r\n        fontWeight: theme.typography.fontWeightMedium\r\n      },\r\n    },\r\n  }),\r\n)((props: StyledTabProps) => <Tab disableRipple {...props} />);\r\n\r\nfunction SlideTransition(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>,\r\n  ) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n// normal styles\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tabs: {\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    listlink: {\r\n      padding: 20,\r\n    },\r\n    root: {\r\n      minHeight: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff'\r\n    },\r\n    divd: {\r\n      backgroundColor: theme.palette.type === 'dark' ? '#242424' : '#ebebeb'\r\n    },\r\n    searchList: {\r\n      display: 'flex',\r\n      cursor: 'pointer',\r\n    },\r\n  })\r\n)\r\n\r\nconst ALL_CHATS = gql`\r\n  query RetrieveChats($currentUser: String!) {\r\n    retrieveChats(currentUser: $currentUser) {\r\n      currentUser\r\n      otherUser\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALL_GROUPS = gql`\r\n  query RetrieveGroups($currentUser: String!) {\r\n    retrieveGroups(currentUser: $currentUser) {\r\n      id\r\n      groupName\r\n      persons\r\n      chats {\r\n        sender\r\n        message\r\n        date\r\n      }\r\n      createdBy\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst Inbox: React.FC = () => {\r\n  const [value, setValue] = React.useState(0);\r\n  const [dialogOpen, setDialogOpen] = React.useState(false);\r\n  const [ search, setSearch ] = React.useState('')\r\n  const [ groupName, setGroupName ] = React.useState('')\r\n  let currentUser = localStorage.getItem(\"user\")\r\n\r\n  // search\r\n  const changeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearch(event.target.value);\r\n  }\r\n\r\n  // groupname\r\n  const changeGroupName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setGroupName(event.target.value);\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setDialogOpen(true);\r\n  }\r\n  const handleDialogCancel = () => {\r\n    setDialogOpen(false);\r\n  }\r\n  const handleDialogClose = () => {\r\n    setDialogOpen(false);\r\n  }\r\n\r\n  let {path, url} = useRouteMatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={3} style={{height: '91.5vh'}}>\r\n          <StyledTabs value={value} onChange={handleChange} aria-label=\"styled tabs example\">\r\n            <StyledTab label=\"Chats\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Groups\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n          {/* <ListItem className={classes.listlink}>\r\n            <StyledBadge badgeContent={data.retrieveChats.length}>\r\n              <Typography variant=\"h6\" color=\"textPrimary\" style={{fontWeight: 'bold'}}>Chats</Typography>\r\n            </StyledBadge>\r\n          </ListItem> */}\r\n          <Divider />\r\n          <TabPanel value={value} index={0}>\r\n            <Chats />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Groups />\r\n          </TabPanel>\r\n        </Grid>\r\n        <Divider orientation=\"vertical\" flexItem style={{color:'#727272'}} />\r\n        <Grid item xs={8}>\r\n          <Button onClick={handleDialogOpen} style={{margin: 20, textTransform: \"capitalize\"}}>Create Group</Button>\r\n            {/* <MessageBox /> */}\r\n            {/* <Switch>\r\n              <Route exact path={path}>\r\n                <Typography color=\"textPrimary\">Select a person to start messaging</Typography>\r\n              </Route>\r\n              <Route exact path={`${path}/:name`}>\r\n                <MessageBox />\r\n              </Route> \r\n            </Switch>*/}\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={dialogOpen}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Create New Group\"}</DialogTitle>\r\n        <DialogContent>\r\n          {/* <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Create a new group with your friends\r\n          </DialogContentText> */}\r\n          <Input \r\n            placeholder=\"Enter Group Name...\" \r\n            fullWidth\r\n            value={groupName}\r\n            onChange={changeGroupName}\r\n            inputProps={{ 'aria-label': 'description' }} \r\n          />\r\n          <br />\r\n          <br />\r\n          <Input \r\n            placeholder=\"Search people to add...\" \r\n            fullWidth\r\n            value={search}\r\n            onChange={changeSearch}\r\n            inputProps={{ 'aria-label': 'description' }} \r\n          />\r\n          <SearchUsers \r\n            groupName={groupName}\r\n            search={search}\r\n            classes={classes}\r\n            currentUser={currentUser}\r\n            handleDialogClose={handleDialogClose}\r\n            handleDialogCancel={handleDialogCancel}\r\n          />\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Inbox;\r\n\r\nconst SEARCH_USERS = gql`\r\n  query SearchUser($letter: String!) {\r\n    searchUser(letter: $letter) {\r\n      name\r\n      username\r\n      email\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_GROUP = gql`\r\n  mutation CreateGroup($groupName: String, $createdBy: String!, $persons:[String!]!) {\r\n    createGroup(groupName: $groupName, createdBy: $createdBy, persons: $persons) {\r\n      id\r\n      groupName\r\n      persons\r\n      createdBy\r\n      chats {\r\n        sender\r\n        message\r\n        date\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchUsers = (props: any) => {\r\n\r\n  const { loading, error, data} = useQuery(SEARCH_USERS, {\r\n    variables: { letter: props.search }\r\n  })\r\n\r\n  const [state, setState] = React.useState<any[]>([])\r\n\r\n  const [createGroup] = useMutation(CREATE_GROUP)\r\n\r\n  const handleSelect = (username: any) => {\r\n    if(!state.includes(username)) {\r\n      setState([...state, username])\r\n    } else {\r\n      console.log(\"user already to the chips\")\r\n    }\r\n  }\r\n  const handleDelete = (username: any) => {\r\n    setState((chips) => chips.filter((chip) => chip !== username ))\r\n  }\r\n  const handleCancel = () => {\r\n    props.handleDialogCancel()\r\n  }\r\n  const handleOk = async() => {\r\n    if(state !== undefined || state !== null) {\r\n      await createGroup({\r\n        variables: {groupName: props.groupName,createdBy: props.currentUser, persons: state}\r\n      })\r\n      props.handleDialogClose()\r\n    }\r\n  }\r\n  return(\r\n    <div style={{minHeight: '400px', display: 'flex', flexDirection: 'column'}}>\r\n      <br />\r\n      <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n        {state.map((index) => (\r\n          <Chip label={index} onDelete={(e) => handleDelete(index)} style={{marginLeft: 10}} />\r\n        ))}\r\n      </div>\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : error ? (\r\n        <Typography>{error.message}</Typography>\r\n      ) : props.search === '' ? (\r\n        <Typography>Start search</Typography>\r\n      ) : (\r\n        <>\r\n        <br />\r\n        <div style={{height: 260,overflowY: 'auto'}}>\r\n          <List>\r\n          {data.searchUser.map((index: any) => (\r\n            <ListItem className={props.classes.searchList} key={index.username}>\r\n              <ListItemAvatar>\r\n                <Avatar style={{backgroundColor: 'orange'}}>{index.username.charAt(0).toUpperCase()}</Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText id={index.username} primary={index.username}/>\r\n              <ListItemSecondaryAction onClick={() => handleSelect(index.username)}>\r\n                <IconButton>\r\n                  <PersonAddOutlinedIcon />\r\n                </IconButton>\r\n                {/* <Button>Add</Button> */}\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        </div>\r\n        \r\n        </>\r\n      )}\r\n      <div style={{bottom: 10, alignSelf: 'flex-end', position: \"absolute\"}}>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n// chats tab\r\nconst Chats: React.FC = () => {\r\n  let currentUser = localStorage.getItem(\"user\")\r\n  const { loading, error, data } = useQuery(ALL_CHATS, {\r\n    variables: {currentUser: currentUser},\r\n    pollInterval: 500\r\n  })\r\n  let {path, url} = useRouteMatch();\r\n  const classes = useStyles();\r\n  return(\r\n    <div>\r\n    { loading ? (\r\n        <CircularProgress />\r\n      ) : \r\n      error ? (\r\n        <p>{error.message}<Redirect to=\"/login\" /></p>\r\n      ) :\r\n      data.retrieveChats.length === 0 ? (\r\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '83vh', flexDirection: 'column'}}>\r\n          {/* <img src={noData} alt=\"\" style={{height: 200, width: 350, opacity: 0.8}} /> */}\r\n          <img src={emtInbox} alt=\"\" style={{height: 120, width: 220, opacity: 0.8}} />\r\n          <Typography style={{color: '#BDBDBD'}}>\r\n            Oh no! Your inbox is empty\r\n          </Typography>\r\n          <Typography style={{color: '#BDBDBD'}}>\r\n            Click here to search for people <Link to=\"/search\" style={{color: '#AED581'}}>Search</Link>\r\n          </Typography>\r\n        </div>\r\n      ) :\r\n      (data.retrieveChats.map((index: any) => (\r\n        <>\r\n        <ListItem key={index.username} className={classes.listlink} component={Link} to={`${url}/${index.otherUser === currentUser ? index.currentUser : index.otherUser}`}>\r\n        <Avatar >{index.username}</Avatar>\r\n        <span style={{flexGrow: .07}}></span>\r\n        <div>\r\n          <Typography color=\"textPrimary\" style={{fontSize: 17}}>\r\n            {index.otherUser === currentUser ? (<>{index.currentUser}</>) : (<>{index.otherUser}</>)}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" style={{fontSize: 15, overflow: 'hidden'}}>\r\n            {index.message}\r\n          </Typography>\r\n        </div>\r\n        </ListItem>\r\n        <Divider className={classes.divd} />\r\n        </>\r\n      ))\r\n      )\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\n//groups tab\r\nconst Groups: React.FC = () => {\r\n  let currentUser = localStorage.getItem(\"user\")\r\n  const { loading, error, data } = useQuery(ALL_GROUPS, {\r\n    variables: {currentUser: currentUser},\r\n    pollInterval: 500\r\n  })\r\n  let {path, url} = useRouteMatch();\r\n  const classes = useStyles();\r\n  \r\n  return(\r\n    <div>\r\n    { loading ? (\r\n        <CircularProgress />\r\n      ) : \r\n      error ? (\r\n        <p>{error.message}<Redirect to=\"/login\" /></p>\r\n      ) :\r\n      data.retrieveGroups.length === 0 ? (\r\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '83vh', flexDirection: 'column', textAlign: 'center'}}>\r\n          {/* <img src={noData} alt=\"\" style={{height: 200, width: 350, opacity: 0.8}} /> */}\r\n          <img src={emtInbox} alt=\"\" style={{height: 120, width: 220, opacity: 0.8}} />\r\n          <Typography style={{color: '#BDBDBD'}}>\r\n            Oh no! Your inbox is empty\r\n          </Typography>\r\n          <Typography style={{color: '#BDBDBD'}}>\r\n            Click here to search for people <Link to=\"/search\" style={{color: '#AED581'}}>Search</Link>\r\n          </Typography>\r\n        </div>\r\n      ) :\r\n      (data.retrieveGroups.map((index: any) => (\r\n        <>\r\n        <ListItem key={index.id} className={classes.listlink} component={Link} to={`${url}/group/${index.id}`}>\r\n        <Avatar>{index.groupName.charAt(0).toUpperCase()}</Avatar>\r\n        <span style={{flexGrow: .07}}></span>\r\n        <div>\r\n          <Typography color=\"textPrimary\" style={{fontSize: 17, overflow: 'hidden'}}>\r\n            {index.groupName}\r\n          </Typography>\r\n          {index.chats.length === 0 ? (\r\n            <Typography color=\"textSecondary\" style={{fontSize: 15, overflow: 'hidden', fontStyle: 'italic'}}>Start your Conversation</Typography>\r\n            ) : (\r\n            <Typography color=\"textSecondary\" style={{fontSize: 15, overflow: 'hidden'}}>\r\n              {index.chats.slice(-1)[0].sender}:{index.chats.slice(-1)[0].message}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        </ListItem>\r\n        <Divider className={classes.divd} />\r\n        </>\r\n      ))\r\n      )\r\n    }\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react'\r\nimport { useQuery, gql, useMutation } from '@apollo/client';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport {Link, Route, Switch, Redirect, useRouteMatch, useParams} from 'react-router-dom'\r\nimport { Grid, Snackbar, Button, \r\n  Paper, Typography, ListItem,\r\n  InputBase, InputAdornment, \r\n  Slide, useMediaQuery\r\n} from '@material-ui/core'\r\nimport Header from './Header'\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport SentimentSatisfiedOutlinedIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\r\nimport { Picker } from 'emoji-mart';\r\nimport \"emoji-mart/css/emoji-mart.css\"\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      minHeight: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff'\r\n    },\r\n    inputRoot: {\r\n      color: theme.palette.type === 'dark' ? '#f1f1f1': 'inherit',\r\n      borderRadius: 10,\r\n      marginLeft: 20,\r\n      paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n      backgroundColor: theme.palette.type === 'dark' ? '#424242' : '#eeeeee',\r\n      paddingRight: `calc(1em + ${theme.spacing(2)}px)`,\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      height: 40,\r\n      transition: theme.transitions.create('width'),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: '50ch',\r\n      //   '&:focus': {\r\n      //     width: '60ch',\r\n      //   },\r\n      // },\r\n    },\r\n    chatbox: {\r\n      borderLeft: theme.palette.type === 'dark' ? '1px solid #303030' : \"1px solid #e2e2e2\",\r\n      borderRight: theme.palette.type === 'dark' ? '1px solid #303030' : \"1px solid #e2e2e2\",\r\n      minHeight: '91.5vh',\r\n      position: 'relative'\r\n    },\r\n    tabbar: {\r\n      height: 40,\r\n      borderBottom: theme.palette.type === 'dark' ? '1px solid #303030' : '1px solid #e2e2e2',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n      padding: 10\r\n    },\r\n    leftSide: {\r\n      padding: \"5px 15px\",\r\n      borderRadius: \"0px 10px 10px 0px\",\r\n      borderLeft: \"4px solid #FF8A80\",\r\n      alignSelf: 'flex-start',\r\n      width: 'max-content',\r\n      border: theme.palette.type === 'dark' ? '1px solid #303030' : '1px solid #e2e2e2',\r\n      margin: 5,\r\n      display: 'flex',\r\n      color: theme.palette.text.primary,\r\n      maxWidth: '60%'\r\n    },\r\n    rightSide: {\r\n      padding: \"5px 15px\",\r\n      borderRadius: \"10px 0px 0px 10px\",\r\n      borderRight: \"4px solid #42A5F5\",\r\n      display: 'flex',\r\n      color: theme.palette.text.primary,\r\n      // backgroundColor: '#C62828',\r\n      border: theme.palette.type === 'dark' ? '1px solid #303030' : '1px solid #e2e2e2',\r\n      alignSelf: 'flex-end',\r\n      margin: 5,\r\n      maxWidth: '60%'\r\n    }\r\n  })\r\n)\r\n\r\nconst RET_MSGS = gql`\r\n  query RetrieveMessages($currentUser: String!, $otherUser: String!) {\r\n    retrieveMessages(currentUser: $currentUser, otherUser: $otherUser){\r\n      currentUser\r\n      otherUser\r\n      message\r\n      isSeen\r\n    }\r\n  }\r\n`;\r\n\r\nconst SEND_MSG = gql`\r\n  mutation SendMessage($currentUser: String!, $otherUser: String!, $message: String!) {\r\n    sendMessage(currentUser: $currentUser, otherUser: $otherUser, message: $message){\r\n      currentUser\r\n      otherUser\r\n      message\r\n      isSeen\r\n    }\r\n  }\r\n`;\r\n\r\ninterface parm {\r\n  name: string;\r\n}\r\n\r\ninterface Props {\r\n  match: any,\r\n}\r\n\r\nfunction SlideTransition(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst AlwaysScollToBottom = () => {\r\n  const elementRef = React.useRef<any>();\r\n  React.useEffect(() => elementRef.current.scrollIntoView())\r\n  return <div ref={elementRef} />\r\n}\r\n\r\nconst MessageBox = (props: any) => {\r\n  const classes = useStyles()\r\n  const matches = useMediaQuery('(min-width:780px)');\r\n  const [state, setState] = React.useState<{\r\n    open: boolean;\r\n    Transition: React.ComponentType<TransitionProps & { children?: React.ReactElement<any, any> }>;\r\n  }>({\r\n    open: false,\r\n    Transition: Slide,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\n  let currentUser = localStorage.getItem(\"user\")\r\n  let {name} = useParams<parm>()\r\n  const [ message, setMessage ] = useState('')\r\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\r\n  const changeMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMessage(event.target.value);\r\n  }\r\n  const { loading, error, data } = useQuery(RET_MSGS, {\r\n    variables: {currentUser: currentUser, otherUser: name},\r\n    pollInterval: 500\r\n  })\r\n\r\n  const [sendMessage] = useMutation(SEND_MSG)\r\n\r\n  // useEffect(() => {\r\n  //   refetch()\r\n  // }, [refetch])\r\n\r\n  const onSend = async() => {\r\n    if(message !== '') {  \r\n      await sendMessage({\r\n        variables: {currentUser: currentUser, otherUser: name, message: message}\r\n      })\r\n    } else {\r\n      setState({open: true, Transition: SlideTransition})\r\n    }\r\n    setMessage('')\r\n  }\r\n\r\n  let emojiPicker;\r\n  if(emojiPickerState) {\r\n    emojiPicker = (\r\n      <Picker \r\n        // darkMode={false}\r\n        title=\"Pick your emoji...\"\r\n        emoji=\"point_up\"\r\n        style={{position: 'absolute', bottom: 70, right: 40}}\r\n        onSelect={(emoji: any) => setMessage(message + emoji.native)}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <Grid container spacing={0} style={{display: 'flex', justifyContent: 'center'}}>\r\n        <Grid item></Grid>\r\n        <Grid item xs={matches !== true ? 12 : 6} >\r\n          <div className={classes.chatbox}>\r\n            <div className={classes.tabbar}>\r\n              <Typography variant=\"h6\" color=\"textPrimary\">{name}</Typography>\r\n            </div>\r\n            <div style={{flexGrow: 1, height: '73vh', overflowY: 'auto'}}>\r\n              {loading ? (\r\n                <><CircularProgress /></>\r\n                ) : error ? (\r\n                  <><Redirect to=\"/login\" /></>\r\n                ) : data.retrieveMessages.length === 0 ? (\r\n                  <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\r\n                    <Typography variant=\"h5\" style={{color: '#BDBDBD'}}>Start your conversation</Typography>\r\n                  </div>\r\n                ) : (\r\n                  <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', minHeight: '100%'}}>\r\n                    {data.retrieveMessages.map((index: any) => (\r\n                      index.currentUser === currentUser ? (\r\n                        <div className={classes.rightSide}>\r\n                          <Typography>{index.message}</Typography>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={classes.leftSide}>\r\n                          <Typography>{index.message}</Typography>\r\n                        </div>\r\n                      )\r\n                      \r\n                    ))}\r\n                    <AlwaysScollToBottom />\r\n                  </div>\r\n                )}\r\n            </div>\r\n          {emojiPicker}\r\n            <div style={{position: 'absolute', bottom: 0, flex: 0.1, width: '100%', display: 'flex', paddingBottom: 10}}>\r\n              <InputBase\r\n              placeholder=\"Enter message…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              fullWidth\r\n              autoFocus\r\n              value={message}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <SentimentSatisfiedOutlinedIcon\r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={(event) => {\r\n                    event.preventDefault();\r\n                    SetEmojiPicker(!emojiPickerState);\r\n                  }} />\r\n                </InputAdornment>\r\n              }\r\n              onChange={changeMessage}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            <Button variant=\"contained\" onClick={onSend}\r\n             style={{height: 35, alignSelf: 'center', color: '#fff', backgroundColor: '#C62828', marginLeft: 20, marginRight: 20}}>Send</Button>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar\r\n        open={state.open}\r\n        anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\r\n        onClose={handleClose}\r\n        autoHideDuration={2500}\r\n        TransitionComponent={state.Transition}\r\n        message=\"Can't send empty message\"\r\n        key={state.Transition.name}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageBox\r\n","import React from 'react'\r\nimport { Typography, Grid, CircularProgress, Button } from '@material-ui/core'\r\nimport Header from './Header'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { useParams, Redirect, Link } from 'react-router-dom'\r\nimport { gql, useQuery } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      minHeight: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff' \r\n    },\r\n  })\r\n)\r\n\r\ninterface user {\r\n  otherUser: any;\r\n}\r\n\r\n\r\n\r\nconst OTHER_USER = gql`\r\n  query OtherUser($username: String!){\r\n    otherUser(username: $username) {\r\n      name\r\n      username\r\n      id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nconst OthersProfile: React.FC = () => {\r\n  let { otherUser } = useParams<user>();\r\n  const classes = useStyles();\r\n  const { loading, error, data } = useQuery(OTHER_USER, {\r\n    variables: { username: otherUser},\r\n    pollInterval: 500\r\n  })\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={6}>\r\n          {loading ? (\r\n            <div style={{display: 'flex', justifyContent: 'center', height: '89vh'}}>\r\n              <CircularProgress />\r\n            </div>\r\n          ) : error ? (\r\n            <><p>{error.message}</p><Redirect to=\"/login\" /></>\r\n          ) : (\r\n            <div>\r\n              <Typography color=\"textPrimary\">Name : {data.otherUser.name} </Typography>\r\n              <Typography color=\"textPrimary\">Email : {data.otherUser.email} </Typography>\r\n              <Typography color=\"textPrimary\">Username : {data.otherUser.username} </Typography>\r\n              <br />\r\n              <Link style={{textDecoration: 'none'}} to={`/inbox/${data.otherUser.username}`}>\r\n                <Button variant=\"outlined\" style={{backgroundColor: '#81C784', color: '#fff', height: 35, textTransform: \"capitalize\" }}>\r\n                  Send Message\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OthersProfile\r\n","import React from 'react'\r\nimport { \r\n  Typography, Button, Tabs, \r\n  Tab, Box, Grid, TextField, \r\n  CircularProgress, IconButton\r\n} from '@material-ui/core'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { makeStyles, Theme, createStyles, withStyles } from '@material-ui/core/styles';\r\nimport Header from './Header';\r\nimport { useQuery, gql, useMutation } from '@apollo/client';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport {WbSunnyRounded, NightsStayRounded} from '@material-ui/icons';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    margin: \"0px 20px\",\r\n    width: '300px',\r\n    '& label.Mui-focused': {\r\n      color: '#1890ff',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#1890ff',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#1890ff',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\ninterface StyledTabsProps {\r\n  value: number;\r\n  onChange: (event: React.ChangeEvent<{}>, newValue: number) => void;\r\n  orientation: any;\r\n  className: any;\r\n}\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    '& > span': {\r\n      maxWidth: 40,\r\n      width: '100%',\r\n      backgroundColor: '#635ee7',\r\n    },\r\n  },\r\n})((props: StyledTabsProps) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\ninterface StyledTabProps {\r\n  label: string;\r\n}\r\n\r\nconst StyledTab = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      textTransform: 'none',\r\n      minWidth: \"200px\",\r\n      color: theme.palette.text.primary,\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      fontSize: theme.typography.pxToRem(15),\r\n      marginRight: theme.spacing(1),\r\n      '&:focus': {\r\n        opacity: 1,\r\n      },\r\n    },\r\n  }),\r\n)((props: StyledTabProps) => <Tab disableRipple {...props} />);\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n      style={{width: \"80%\"}}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minHeight: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff' \r\n    },\r\n    buttons: {\r\n      backgroundColor: '#D32F2F',\r\n      color: '#fff',\r\n      '&:hover': {\r\n        backgroundColor: '#EF5350'\r\n      }\r\n    },\r\n    tabs: {\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    main: {\r\n      flexGrow: 1,\r\n      // backgroundColor: theme.palette.background.paper,\r\n      minHeight: \"88vh\",\r\n      border: theme.palette.type === \"light\" ? \"1px solid #e2e2e2\" : \"1px solid #464646\",\r\n      borderTop: \"none\",\r\n      borderBottom: \"none\"\r\n    },\r\n    container: {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      minHeight: \"80vh\",\r\n    },\r\n    editDetails: {\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n      width: \"100%\",\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    fields: {\r\n      display: 'flex',\r\n      width: \"100%\",\r\n      alignItems: 'center',\r\n      justifyContent: 'space-around',\r\n      marginBottom: 20\r\n    }\r\n  }),\r\n);\r\n\r\ninterface dark {\r\n  onToggleDark: any\r\n}\r\n\r\nconst USER_DATA = gql`\r\n  query UserProfile {\r\n    profile{\r\n      id\r\n      name\r\n      email\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDIT_NAME = gql`\r\n  mutation EditName($username: String!, $newName: String!) {\r\n    editName(username: $username, newName: $newName) {\r\n      id\r\n      email\r\n      name\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDIT_EMAIL = gql`\r\n  mutation EditEmail($username: String!, $newEmail: String!) {\r\n    editEmail(username: $username, newEmail: $newEmail) {\r\n      id\r\n      email\r\n      name\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nconst Settings: React.FC<dark> = ({onToggleDark}) => {\r\n  let currentUser = localStorage.getItem(\"user\")\r\n\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [name, setName] = React.useState('')\r\n  const [email, setEmail] = React.useState('')\r\n\r\n  const { loading, error, data } = useQuery(USER_DATA, {\r\n    context: {\r\n      headers: {\r\n        \"Authorization\": localStorage.getItem(\"token\")\r\n      }\r\n    },\r\n    pollInterval: 500\r\n  })\r\n\r\n  const [editName] = useMutation(EDIT_NAME);\r\n  const [editEmail] = useMutation(EDIT_EMAIL);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const onChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  }\r\n  \r\n  const onClickName = async() => {\r\n    if(name !== '') {\r\n      await editName({\r\n        variables: {username: currentUser, newName: name}\r\n      })\r\n    }\r\n    setName('')\r\n  }\r\n\r\n  const onClickEmail = async() => {\r\n    if(email !== '') {\r\n      await editEmail({\r\n        variables: {username: currentUser, newEmail: email}\r\n      })\r\n    }\r\n    setEmail('')\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    history.push(\"/login\")\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      {loading ? (\r\n        <div style={{display: 'flex', justifyContent: 'center', height: '89vh'}}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : error ? (\r\n        <><p>{error.message}</p><Redirect to=\"/login\" /></>\r\n      ) : (\r\n      <Grid container>\r\n        <Grid item xs={2}></Grid>\r\n        <div className={classes.main}>\r\n          <br />\r\n        <div className={classes.container}>\r\n          <StyledTabs\r\n            orientation=\"vertical\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"Vertical tabs example\"\r\n            className={classes.tabs}\r\n          >\r\n            <StyledTab label=\"Edit Detials\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Theme\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n          <TabPanel value={value} index={0}>\r\n            <div className={classes.editDetails}>\r\n              <div className={classes.fields}>\r\n                <Typography color=\"textSecondary\">Name: </Typography>\r\n                <CssTextField\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  placeholder={data.profile.name}\r\n                  type=\"text\"\r\n                  onChange={onChangeName}\r\n                />\r\n                <IconButton onClick={onClickName}>\r\n                  <EditRoundedIcon />\r\n                </IconButton>\r\n              </div>\r\n              <div className={classes.fields}>\r\n                <Typography color=\"textSecondary\">Email: </Typography>\r\n                <CssTextField\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  placeholder={data.profile.email}\r\n                  value={email}\r\n                  type=\"email\"\r\n                  onChange={onChangeEmail}\r\n                />\r\n                <IconButton onClick={onClickEmail}>\r\n                  <EditRoundedIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <IconButton onClick={onToggleDark}>\r\n              {localStorage.getItem(\"theme\") === \"light\" ? (\r\n                <WbSunnyRounded />\r\n              ) : (\r\n                <NightsStayRounded />\r\n              )}\r\n            </IconButton>\r\n            {/* <Button variant=\"outlined\" color=\"primary\">D/L</Button> */}\r\n          </TabPanel>\r\n        </div>\r\n        <Button className={classes.buttons} variant=\"outlined\" onClick={logout}>logout</Button>\r\n        </div>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n      )}\r\n      <br></br>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React, {useState} from 'react'\r\nimport { useQuery, gql, useMutation } from '@apollo/client';\r\nimport { makeStyles, createStyles, Theme, useTheme } from '@material-ui/core/styles';\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport { \r\n  Grid, Snackbar, Button, Chip, List,\r\n  ListItem, ListItemSecondaryAction, \r\n  ListItemText, Typography, IconButton, \r\n  InputBase, InputAdornment, Slide,\r\n  Dialog, DialogActions, DialogContent, \r\n  DialogContentText, DialogTitle, Input, \r\n  Avatar, useMediaQuery, Drawer, Divider,\r\n  TextField\r\n} from '@material-ui/core'\r\nimport Header from './Header'\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport SentimentSatisfiedOutlinedIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\r\nimport { Picker } from 'emoji-mart';\r\nimport \"emoji-mart/css/emoji-mart.css\"\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport EditAttributesOutlinedIcon from '@material-ui/icons/EditAttributesOutlined';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      minHeight: '100vh',\r\n      backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#fff'\r\n    },\r\n    inputRoot: {\r\n      color: theme.palette.type === 'dark' ? '#f1f1f1': 'inherit',\r\n      borderRadius: 10,\r\n      marginLeft: 20,\r\n      paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n      backgroundColor: theme.palette.type === 'dark' ? '#424242' : '#eeeeee',\r\n      paddingRight: `calc(1em + ${theme.spacing(2)}px)`,\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      height: 40,\r\n      transition: theme.transitions.create('width'),\r\n      // [theme.breakpoints.up('sm')]: {\r\n      //   width: '50ch',\r\n      //   '&:focus': {\r\n      //     width: '60ch',\r\n      //   },\r\n      // },\r\n    },\r\n    chatbox: {\r\n      borderLeft: theme.palette.type === 'dark' ? '1px solid #303030' : \"1px solid #e2e2e2\",\r\n      borderRight: theme.palette.type === 'dark' ? '1px solid #303030' : \"1px solid #e2e2e2\",\r\n      minHeight: '91.5vh',\r\n      position: 'relative'\r\n    },\r\n    tabbar: {\r\n      height: 40,\r\n      borderBottom: theme.palette.type === 'dark' ? '1px solid #303030' : '1px solid #e2e2e2',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n      padding: 10\r\n    },\r\n    leftSide: {\r\n      padding: \"5px 15px\",\r\n      borderRadius: \"0px 10px 10px 0px\",\r\n      borderLeft: \"4px solid #FF8A80\",\r\n      alignSelf: 'flex-start',\r\n      width: 'max-content',\r\n      border: theme.palette.type === 'dark' ? '1px solid #303030' : '1px solid #e2e2e2',\r\n      margin: 5,\r\n      display: 'flex',\r\n      color: theme.palette.text.primary,\r\n      maxWidth: '60%'\r\n    },\r\n    rightSide: {\r\n      padding: \"5px 15px\",\r\n      borderRadius: \"10px 0px 0px 10px\",\r\n      borderRight: \"4px solid #42A5F5\",\r\n      display: 'flex',\r\n      color: theme.palette.text.primary,\r\n      // backgroundColor: '#C62828',\r\n      border: theme.palette.type === 'dark' ? '1px solid #303030' : '1px solid #e2e2e2',\r\n      alignSelf: 'flex-end',\r\n      margin: 5,\r\n      maxWidth: '60%'\r\n    },\r\n    sender: {\r\n      fontSize: 14,\r\n      marginLeft: 5,\r\n      fontStyle: 'italic',\r\n      color: theme.palette.type === 'dark' ? '#9D9D9D' : '#727272'\r\n    },\r\n    searchList: {\r\n      display: 'flex',\r\n      cursor: 'pointer',\r\n    },\r\n    drawer: {\r\n      width: 400,\r\n      flexShrink: 0\r\n    },\r\n    drawerItems: {},\r\n    leave: {\r\n      width: \"100%\",\r\n      padding: \"10px 0px\", \r\n      textAlign: 'center', \r\n      borderTop: \"1px solid #F93A3A\", \r\n      position: 'absolute', \r\n      bottom: 0, \r\n      color: '#F93A3A',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        // backgroundColor: 'rgba(249, 58, 58, 0.62)',\r\n        backgroundColor: 'rgba(249, 58, 58, 0.3)',\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\nconst RET_GRP_MSGS = gql`\r\n  query RetrieveGroupMessages($id: ID!) {\r\n    retrieveGroupMessages(id: $id) {\r\n      id\r\n      groupName\r\n      persons\r\n      chats {\r\n        sender\r\n        message\r\n        date\r\n      }\r\n      createdBy\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst SEND_GRP_MSG = gql`\r\n  mutation SendGroupMessage($id: ID!, $sender: String!, $message: String!) {\r\n    sendGroupMessage(id: $id, sender: $sender, message: $message) {\r\n      id\r\n      persons\r\n      groupName\r\n      chats {\r\n        sender\r\n        message\r\n        date\r\n      }\r\n      createdBy\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDIT_GNAME = gql`\r\n  mutation EditGroupName($id: ID!, $groupName: String!) {\r\n    editGroupName(id: $id, groupName: $groupName){\r\n      id\r\n      persons\r\n      groupName\r\n      createdBy\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\ninterface parm {\r\n  id: any;\r\n}\r\n\r\n// slide amination\r\nfunction SlideTransition(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n// set the messages to bottom\r\nconst AlwaysScollToBottom = () => {\r\n  const elementRef = React.useRef<any>();\r\n  React.useEffect(() => elementRef.current.scrollIntoView())\r\n  return <div ref={elementRef} />\r\n}\r\n\r\n// dialog animation\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>,\r\n  ) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\n  const GroupMsgBox = (props: any) => {\r\n    const classes = useStyles()\r\n    const matches = useMediaQuery('(min-width:780px)');\r\n    const [dialogOpen, setDialogOpen] = React.useState(false);\r\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n    const [ search, setSearch ] = useState('')\r\n    const [state, setState] = React.useState<{\r\n      open: boolean;\r\n      Transition: React.ComponentType<TransitionProps & { children?: React.ReactElement<any, any> }>;\r\n    }>({\r\n      open: false,\r\n      Transition: Slide,\r\n    });\r\n    \r\n  // dialog\r\n  const handleDialogOpen = () => {\r\n    setDialogOpen(true);\r\n    setDrawerOpen(false);\r\n  }\r\n  const handleDialogCancel = () => {\r\n    setDialogOpen(false);\r\n    setDrawerOpen(true);\r\n  }\r\n  const handleDialogClose = () => {\r\n    setDialogOpen(false);\r\n  }\r\n  \r\n  // drawer\r\n  const handleDrawerOpen = () => {\r\n    setDrawerOpen(true);\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setDrawerOpen(false);\r\n  }\r\n  \r\n  //snackbar closing\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\n  \r\n  // search\r\n  const changeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearch(event.target.value);\r\n  }\r\n  \r\n  let currentUser = localStorage.getItem(\"user\")\r\n  let {id} = useParams<parm>()\r\n  \r\n  const [ message, setMessage ] = useState('')\r\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\r\n  const changeMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMessage(event.target.value);\r\n  }\r\n  const { loading, error, data } = useQuery(RET_GRP_MSGS, {\r\n    variables: {id: id},\r\n    pollInterval: 500\r\n  })\r\n  \r\n  const [sendMessage] = useMutation(SEND_GRP_MSG)\r\n  \r\n  const onSend = async() => {\r\n    if(message !== '') {  \r\n      await sendMessage({\r\n        variables: {id: id, sender: currentUser, message: message}\r\n      })\r\n    } else {\r\n      setState({open: true, Transition: SlideTransition})\r\n    }\r\n    setMessage('')\r\n  }\r\n  \r\n  const [editGroupName] = useMutation(EDIT_GNAME)\r\n\r\n  const onEdit = async() => {\r\n    if(groupName !== '') {\r\n      await editGroupName({\r\n        variables: {id: id, groupName: groupName}\r\n      })\r\n    }\r\n    setGroupName('')\r\n  }\r\n  const theme = useTheme();\r\n  \r\n  let emojiPicker;\r\n  if(emojiPickerState) {\r\n    emojiPicker = (\r\n      <Picker \r\n      darkMode={theme.palette.type === 'light' ? false : true}\r\n      title=\"Pick your emoji...\"\r\n      emoji=\"point_up\"\r\n      style={{position: 'absolute', bottom: 70, right: 40}}\r\n      onSelect={(emoji: any) => setMessage(message + emoji.native)}\r\n      />\r\n      )\r\n    }\r\n    const [ groupName, setGroupName ] = React.useState('')\r\n    const changeGroupName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setGroupName(event.target.value);\r\n    }\r\n    if (loading) return <CircularProgress />\r\n    if (error) return <Redirect to=\"/login\" />\r\n    return (\r\n      <div className={classes.root}>\r\n      <Header />\r\n      <Grid container spacing={0} style={{display: 'flex', justifyContent: 'center'}}>\r\n        <Grid item></Grid>\r\n        <Grid item xs={matches !== true ? 12 : 6}>\r\n          <div className={classes.chatbox}>\r\n            <div className={classes.tabbar}>\r\n              <Typography variant=\"h6\" color=\"textPrimary\">{data.retrieveGroupMessages.groupName}</Typography>\r\n              <span style={{flexGrow: 1}}></span>\r\n              {/* <IconButton onClick={handleDialogOpen}>\r\n                <EditAttributesOutlinedIcon />\r\n              </IconButton> */}\r\n              <IconButton onClick={handleDrawerOpen}>\r\n                <InfoOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div style={{flexGrow: 1, height: '73vh', overflowY: 'auto'}}>\r\n              {data.retrieveGroupMessages.length === 0 ? (\r\n                  <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\r\n                    <Typography variant=\"h5\" style={{color: '#BDBDBD'}}>Start your conversation</Typography>\r\n                  </div>\r\n                ) : (\r\n                  <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', minHeight: '100%'}}>\r\n                    {data.retrieveGroupMessages.chats.map((index: any) => (\r\n                        index.sender === currentUser ? (\r\n                          <div className={classes.rightSide}>\r\n                            <Typography>{index.message}</Typography>\r\n                          </div>\r\n                        ) : (\r\n                          <>\r\n                          <Typography className={classes.sender}>{index.sender}</Typography>\r\n                          <div className={classes.leftSide}>\r\n                            <Typography>{index.message}</Typography>\r\n                          </div>\r\n                          </>\r\n                        )\r\n                    ))}\r\n                    <AlwaysScollToBottom />\r\n                  </div>\r\n                )}\r\n            </div>\r\n          {emojiPicker}\r\n            <div style={{position: 'absolute', bottom: 0, flex: 0.1, width: '100%', display: 'flex', paddingBottom: 10}}>\r\n              <InputBase\r\n              placeholder=\"Enter message…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              fullWidth\r\n              autoFocus\r\n              value={message}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <SentimentSatisfiedOutlinedIcon\r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={(event) => {\r\n                    event.preventDefault();\r\n                    SetEmojiPicker(!emojiPickerState);\r\n                  }} />\r\n                </InputAdornment>\r\n              }\r\n              onChange={changeMessage}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            <Button variant=\"contained\" onClick={onSend}\r\n             style={{height: 35, alignSelf: 'center', backgroundColor: theme.palette.type === 'dark' ? '#EF9A9A' : '#D32F2F', color: theme.palette.type === 'dark' ? 'revert' : '#fff', marginLeft: 20, marginRight: 20}}>Send</Button>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        {/* <Grid item>\r\n        </Grid> */}\r\n      </Grid>\r\n      <Drawer\r\n        open={drawerOpen}\r\n        anchor=\"right\"\r\n        className={classes.drawer}\r\n        onClose={handleDrawerClose}\r\n      >\r\n        <div style={{width: 400}}>\r\n          <Typography variant=\"h6\" style={{textAlign: 'center', padding: 10}}>Details</Typography>\r\n          <Divider />\r\n          <div style={{padding: 10, display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              value={groupName}\r\n              onChange={changeGroupName}\r\n              fullWidth\r\n              color=\"secondary\"\r\n              // label=\"Group Name\"\r\n              placeholder={data.retrieveGroupMessages.groupName}\r\n            />\r\n            <IconButton\r\n              style={{color: theme.palette.type === 'dark' ? '#EF9A9A' : '#D32F2F'}}\r\n              onClick={onEdit}\r\n            >\r\n              <EditRoundedIcon />\r\n            </IconButton>  \r\n          </div>\r\n          <div style={{padding: 10, display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n            <Typography style={{fontSize: 18}}>People</Typography>\r\n            {\r\n              data.retrieveGroupMessages.createdBy === currentUser ? \r\n              <IconButton\r\n                onClick={handleDialogOpen}\r\n                style={{color: theme.palette.type === 'dark' ? '#EF9A9A' : '#D32F2F'}}\r\n              >\r\n                <GroupAddOutlinedIcon />\r\n              </IconButton>\r\n              : <></>\r\n            }\r\n          </div>\r\n          <List style={{padding: 10}}>\r\n          {data.retrieveGroupMessages.persons.map((index: any) => (\r\n            <ListItem key={index}>\r\n              <div style={{display: 'flex', alignItems: 'center', marginBottom: 10}}>\r\n                <Typography>{index}</Typography>\r\n                <FiberManualRecordIcon style={{height: 8, width: 8, padding: \"0px 6px\"}}/>\r\n                <Typography color=\"textSecondary\" style={{fontSize: 13}}>\r\n                  {data.retrieveGroupMessages.createdBy === index ? \"admin\" : \"member\" }\r\n                </Typography>\r\n              </div>\r\n              {/* <ListItemText id={index} primary={index} /> */}\r\n              <ListItemSecondaryAction>\r\n                {data.retrieveGroupMessages.createdBy === currentUser ? \r\n                  data.retrieveGroupMessages.createdBy !== index ?\r\n                  <Button variant=\"contained\" style={{height: 30, textTransform: 'capitalize', backgroundColor: theme.palette.type === 'dark' ? '#EF9A9A' : '#D32F2F', color: theme.palette.type === 'dark' ? 'revert' : '#fff'}}>Remove</Button>\r\n                : <></>\r\n                : <></>}\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        { \r\n          data.retrieveGroupMessages.createdBy !== currentUser ?\r\n            <div className={classes.leave}>\r\n              <Typography>Leave Group</Typography>\r\n            </div> :\r\n            <div className={classes.leave}>\r\n              <Typography>Delete Group</Typography>\r\n            </div>\r\n        }\r\n        \r\n        </div>\r\n      </Drawer>\r\n      <Snackbar\r\n        open={state.open}\r\n        anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\r\n        onClose={handleClose}\r\n        autoHideDuration={2500}\r\n        TransitionComponent={state.Transition}\r\n        message=\"Can't send empty message\"\r\n        key={state.Transition.name}\r\n      />\r\n      <Dialog\r\n        open={dialogOpen}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Group info\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Add new people into the group chat.\r\n          </DialogContentText>\r\n          <Input \r\n            placeholder=\"Search people\" \r\n            fullWidth\r\n            value={search}\r\n            onChange={changeSearch}\r\n            inputProps={{ 'aria-label': 'description' }} \r\n          />\r\n          <SearchUsers \r\n            search={search}\r\n            classes={classes}\r\n            currentUser={currentUser}\r\n            id={id}\r\n            handleDialogClose={handleDialogClose}\r\n            handleDialogCancel={handleDialogCancel}\r\n          />\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroupMsgBox\r\n\r\n\r\nconst SEARCH_USERS = gql`\r\n  query SearchUser($letter: String!) {\r\n    searchUser(letter: $letter) {\r\n      name\r\n      username\r\n      email\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst ADD_PERSONS = gql`\r\n  mutation AddPerosn($id: ID!, $currentUser: String!, $persons: [String!]!) {\r\n    addPerson(id: $id, currentUser: $currentUser, persons: $persons) {\r\n      id\r\n      groupName\r\n      persons\r\n      createdBy\r\n      chats {\r\n        sender\r\n        message\r\n        date\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\ninterface abc {\r\n  name: string;\r\n}\r\n\r\nconst SearchUsers = (props: any) => {\r\n\r\n  const { loading, error, data} = useQuery(SEARCH_USERS, {\r\n    variables: { letter: props.search }\r\n  })\r\n\r\n  const [state, setState] = React.useState<any[]>([])\r\n\r\n  const [addPersons] = useMutation(ADD_PERSONS)\r\n\r\n  const handleSelect = (username: any) => {\r\n    if(!state.includes(username)) {\r\n      setState([...state, username])\r\n    } else {\r\n      console.log(\"user already to the chips\")\r\n    }\r\n  }\r\n  const handleDelete = (username: any) => {\r\n    setState((chips) => chips.filter((chip) => chip !== username ))\r\n  }\r\n  const handleCancel = () => {\r\n    props.handleDialogCancel()\r\n  }\r\n  const handleOk = async() => {\r\n    if(state !== undefined || state !== null) {\r\n      await addPersons({\r\n        variables: {id: props.id, currentUser: props.currentUser, persons: state}\r\n      })\r\n      props.handleDialogClose()\r\n    }\r\n  }\r\n  return(\r\n    <div style={{minHeight: '350px', display: 'flex', flexDirection: 'column'}}>\r\n      <br />\r\n      <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n        {state.map((index) => (\r\n          <Chip label={index} onDelete={(e) => handleDelete(index)} style={{marginLeft: 10}} />\r\n        ))}\r\n      </div>\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : error ? (\r\n        <Typography>{error.message}</Typography>\r\n      ) : props.search === '' ? (\r\n        <Typography>Start search</Typography>\r\n      ) : (\r\n        <>\r\n        <br />\r\n        <div style={{height: 220,overflowY: 'auto'}}>\r\n        {data.searchUser.map((index: any) => (\r\n          <ListItem className={props.classes.searchList} onClick={() => handleSelect(index.username)} key={index.username}>\r\n            <Avatar>{index.username.charAt(0).toUpperCase()}</Avatar>\r\n            <Typography style={{marginLeft: 15}}>{index.username}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        </div>\r\n        \r\n        </>\r\n      )}\r\n      <div style={{position: 'absolute', bottom: 7, alignSelf: 'flex-end'}}>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// import './App.css';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport Profile from './components/Profile';\nimport Search from './components/Search';\nimport Inbox from './components/Inbox';\nimport MessageBox from './components/MessageBox';\nimport OthersProfile from './components/OthersProfile';\nimport Settings from './components/Settings';\nimport GroupMsgBox from './components/GroupMsgBox';\n\ninterface MTheme {\n  palette: any\n}\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache()\n});\n\nconst App: React.FC = () => {\n\n  // const [theme, setTheme] = React.useState<MTheme>({\n  //   palette: {\n  //     type: \"light\"\n  //   }\n  // })\n  const [darkTheme, setDarkTheme] = React.useState(true);\n  \n  const muiTheme = createMuiTheme({\n    palette: {\n      type: darkTheme ? \"dark\" : \"light\"\n    }\n  });\n\n  React.useEffect(() => {\n    const themeType = localStorage.getItem(\"theme\") || \"light\";\n    if(themeType === \"light\") {\n      setDarkTheme(false)\n    }\n  }, [])\n  const toggleDarkTheme = () => {\n    localStorage.setItem(\"theme\", darkTheme ? \"light\" : \"dark\")\n    setDarkTheme(!darkTheme);\n    // let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\n    // setTheme({\n    //   palette: {\n    //     type: newPaletteType\n    //   }\n    // })\n  }\n\n\n  return (\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={muiTheme}>\n    <div className=\"App\">\n      <Router>\n        <React.Fragment>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/inbox\">\n              <Inbox />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/search\">\n              <Search />\n            </Route>\n            <Route exact path=\"/profile/:otherUser\">\n              <OthersProfile />\n            </Route>\n            <Route exact path=\"/inbox/:name\">\n              <MessageBox />\n            </Route>\n            <Route exact path=\"/inbox/group/:id\">\n              <GroupMsgBox />\n            </Route>\n            <Route exact path=\"/settings\">\n              <Settings onToggleDark={toggleDarkTheme} />\n            </Route>\n          </Switch>\n        </React.Fragment>\n      </Router>\n    </div>\n    \n    </ThemeProvider>\n  </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}